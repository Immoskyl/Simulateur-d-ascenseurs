package ascenseur.affichage;

import ascenseur.traitement.*;

import java.util.ArrayList;
import java.util.Scanner;

public class Client {

    public static void main(String[] args) throws Exception {

        // -- INITIALISATION DE LA VUE --

        Scanner sin = new Scanner(System.in);
        sin.useDelimiter("\\n");
        int nbEtages;
        int nbAscenseur;
        ArrayList<AscenseurAbstrait> listeAscenseurs = new ArrayList<>();


        System.out.println("Choisir nombre d'étages (exemple : 10)");
        nbEtages = sin.nextInt();

        System.out.println("Choisir le nombre d'ascenseurs (exemple : 3)");
        nbAscenseur = sin.nextInt();


        for (int i = 0; i < nbAscenseur; ++i) {
            System.out.println("Choisissez les options pour l'ascenseur numero " + i);
            System.out.println("Options : Musique, Rapide, une par ligne, vide pour aucune option");

            FabriqueAscenseur fabrique = new FabriqueAscenseur();
            AscenseurAbstrait ascenseur = fabrique.creerAscenseur();

            while (true){
                String option = sin.next();
                if (option.equals("")) break;
                fabrique.ajouterOptions(option, ascenseur);
            }

            listeAscenseurs.add(ascenseur);
        }

        Controleur controleur = Controleur.getInstance();

        VueCoupeImmeuble vue = new VueCoupeImmeuble(listeAscenseurs, nbEtages);
        vue.afficher();




        // -- PROGRAMME PRINCIPAL --

        System.out.println("Taper \"Externe\" pour effectuer une requete externe, \"Interne\" pour une requete interne, vide pour laisser se dérouler un tour, \"Exit\" pour quitter");

        while (true) {

            String ligne;
            ligne = sin.next();
            Requete requete;
            int etage;

            //Sortie
            if (ligne.equals("Exit")) break;

            //Passe le tour
            if (ligne.equals("")) {

                controleur.affecterRequetes();

                for (AscenseurAbstrait ascenseur : listeAscenseurs) {
                    ascenseur.action();
                }
            }

            //Requete externe
            if (ligne.equals("Externe")) {
                boolean direction;

                System.out.println("Choisir le numéro de l'étage (de 0 à n)");
                etage = sin.nextInt();

                System.out.println("Choisir la direction (Bas ou Haut)");
                if (ligne.equals("Bas"))
                    direction = false;
                else if (ligne.equals("Haut"))
                    direction = true;
                else {
                    System.out.println("Direction non comprise");
                    continue;
                }

                controleur.creerRequeteExterne(etage, direction);
            }

            //Requete Interne
            if (ligne.equals("Interne")) {
                int numeroAscenseur;

                System.out.println("Choisir le numéro de l'étage (de 0 à n)");
                etage = sin.nextInt();

                System.out.println("Choisir à quel ascenseur attribuer la requete (de 0 à n)");
                numeroAscenseur = sin.nextInt();

                listeAscenseurs.get(numeroAscenseur).creerRequeteInterne(etage);
            }
        }







    }
}
